#!/usr/bin/perl

use strict;


sub decode {
	my $data = shift @_;
	my $len = length($data);
	my $rc = "";

	my $i = 0;
	while ($i < $len) {
		$rc .= sprintf("0x%02x,", unpack("C", substr($data, $i, 1)));
		$i = $i + 1;
		if ($i % 16 == 0) { $rc .= "\n" };
	}
	if ($i % 16 != 0) { $rc .= "\n" };
	return $rc;
}

sub slurp {
	my $fname = shift @_;

	open my $fh, '<', ${fname} or die "Can't open file ($fname) $!";
	my $rc = do { local $/; <$fh> };
	return $rc;
}


($#ARGV == 2) or die("Usage: fsgen <source_directory> <output_c_file> <output_h_file\n");

my $source = $ARGV[0];
my $dest_c = $ARGV[1];
my $dest_h = $ARGV[2];

(-d $source) or die("Error: source_directory must be a directory\n");
print("Source=$source dest=$dest_c / $dest_h\n");
#
# Now open the output file and write the headers...
#
open(FC, ">${dest_c}") or die("Error: unable to open c file for writing\n");
open(FH, ">${dest_h}") or die("Error: unable to open h file for writing\n");

my $header = <<'EOF';
//
// Autogenerated file - do not edit
//

EOF

print FC $header;
print FH $header;

my $path = "/";

sub do_dir {
	my $dir = shift @_;
	my $rep = shift @_;

	opendir(DH, $dir) or die("Error: unable to open directory ($dir)\n");
	my @files = readdir(DH);
	closedir(DH);

	foreach my $file (@files) {
		next if ($file eq ".");
		next if ($file eq "..");

		if (-d "${dir}/${file}") {
			do_dir("${dir}/${file}", "${rep}/${file}");
			next;
		}

		my $sname = "${file}";
		$sname =~ s/\./_/g;
		$sname =~ s/\//_/g;

		print("Got file: [$dir/$file] [$sname]\n");

		print FC "const unsigned char ${sname}[] = {\n";

		my $flen = -s "${dir}/${file}";
		print FC "/* raw file data ($flen bytes) */\n";
		my $data = slurp("${dir}/${file}");
		print FC decode($data);
		print FC "};\n\n";

		print FH "extern const unsigned char ${sname}[${flen}];\n";
	}
}

do_dir(${source}, "");

close(FC);
close(FH);
exit(0);
